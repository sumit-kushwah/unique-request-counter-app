version: '3.8'

services:
  kafka-broker:
    image: apache/kafka:latest
    container_name: kafka-broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    command:
      - sh
      - -c
      - |
        /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kafka.properties &
        sleep 5 && /opt/kafka/bin/kafka-topics.sh --create --topic UNIQUE_REQUEST_COUNT_BY_MINUTE --bootstrap-server localhost:9092 && wait
    networks:
      - app-network

  redis-server:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    networks:
      - app-network

  unique-request-extended:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: unique-request-extended
    ports:
      - "8080:8080"
    environment:
      REDIS_ADDR: redis-server:6379
      KAFKA_ADDR: kafka-broker:9092
      KAFKA_TOPIC: UNIQUE_REQUEST_COUNT_BY_MINUTE
    depends_on:
      - kafka-broker
      - redis-server
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
